// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.ListEditor = (function(_super) {
    __extends(ListEditor, _super);

    function ListEditor() {
      return ListEditor.__super__.constructor.apply(this, arguments);
    }

    ListEditor.prototype.initialize = function(config) {
      var editor;
      console.log('ListEditor.initialize', this);
      this.firstRender = true;
      ListEditor.__super__.initialize.call(this, config);
      editor = this;
      editor.$add = $('#node-add');
      editor.$add.on('click', (function(_this) {
        return function() {};
      })(this));
      editor.$textarea = $('textarea');
      return editor.$textarea.on('input', (function(_this) {
        return function() {
          console.log('ListEditor:input');
          editor.triggerRender(editor.$textarea.val());
          return editor.$textarea.change();
        };
      })(this));
    };

    ListEditor.prototype.render = function(node) {
      console.log('ListEditor.render()');
      ListEditor.__super__.render.call(this, node);
      this.$textarea.val(node.data);
      return this.firstRender = false;
    };

    return ListEditor;

  })(window.Editor);

}).call(this);
