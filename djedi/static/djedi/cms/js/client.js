// Generated by CoffeeScript 1.8.0
(function() {
  window.Client = (function() {
    Client.prototype.baseUrl = '/admin/djedi/cms/';

    function Client(baseUrl, uri) {
      this.baseUrl = baseUrl;
      this.uri = uri;
    }

    Client.prototype.URL = function(path) {
      return this.baseUrl + path;
    };

    Client.prototype.e = function(uri) {
      return encodeURIComponent(encodeURIComponent((uri || this.uri || '').valueOf()));
    };

    Client.prototype.AJAX = function(method, path, data, callback) {
      var response;
      if (callback != null) {
        return $.ajax({
          type: method,
          url: this.URL(path),
          data: data,
          success: function(data, textStatus, jqXHR) {
            return callback(data);
          }
        });
      } else {
        response = $.ajax({
          type: method,
          url: this.URL(path),
          data: data,
          async: false
        });
        if (response.status === 200) {
          return response.responseText;
        } else {
          return void 0;
        }
      }
    };

    Client.prototype.GET = function(path, callback) {
      return this.AJAX("GET", path, null, callback);
    };

    Client.prototype.GET_JSON = function(path, callback) {
      var r;
      if (callback != null) {
        return this.GET(path, callback);
      } else {
        if (r = this.GET(path)) {
          return JSON.parse(r);
        } else {
          return void 0;
        }
      }
    };

    Client.prototype.POST = function(path, data, callback) {
      return this.AJAX("POST", path, data, callback);
    };

    Client.prototype.PUT = function(path, data, callback) {
      return this.AJAX("PUT", path, data, callback);
    };

    Client.prototype.DELETE = function(path, callback) {
      return this.AJAX("DELETE", path, null, callback);
    };

    Client.prototype.get = function(uri, callback) {
      return this.GET_JSON("node/" + (this.e(uri)), callback);
    };

    Client.prototype.editor = function(uri, callback) {
      return this.GET("node/" + (this.e(uri)) + "/editor", callback);
    };

    Client.prototype.set = function(uri, data, callback) {
      var response;
      response = this.POST("node/" + (this.e(uri)), data, callback);
      if (!callback) {
        return JSON.parse(response);
      }
    };

    Client.prototype.publish = function(uri, callback) {
      return JSON.parse(this.PUT("node/" + (this.e(uri)) + "/publish", callback));
    };

    Client.prototype.revisions = function(uri, callback) {
      return this.GET_JSON("node/" + (this.e(uri)) + "/revisions", callback);
    };

    Client.prototype["delete"] = function(uri, callback) {
      return this.DELETE("node/" + (this.e(uri)), callback);
    };

    Client.prototype.load = function(uri, callback) {
      return this.GET_JSON("node/" + (this.e(uri)) + "/load", callback);
    };

    Client.prototype.render = function(ext, data, callback) {
      return this.POST("plugin/" + ext, data, callback);
    };

    Client.prototype.search = function(uri, callback) {
      return this.GET_JSON("search/" + (this.e(uri)), callback);
    };

    return Client;

  })();

}).call(this);
