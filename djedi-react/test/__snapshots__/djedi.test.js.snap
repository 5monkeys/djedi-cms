// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`get it calls the callback synchronously if the node already exists: simple 1`] = `
Object {
  "uri": "i18n://en-us@test.txt",
  "value": "test",
}
`;

exports[`get it calls the callback synchronously if the node already exists: versioned 1`] = `
Object {
  "uri": "i18n://en-us@edited.txt#1",
  "value": "user edited text",
}
`;

exports[`get it calls the callback synchronously if the node already exists: versionless 1`] = `
Object {
  "uri": "i18n://en-us@edited.txt#1",
  "value": "user edited text",
}
`;

exports[`get it does not update versionless nodes: versioned 1`] = `
Object {
  "uri": "i18n://en-us@test.txt#1",
  "value": "edited",
}
`;

exports[`get it does not update versionless nodes: versionless 1`] = `
Object {
  "uri": "i18n://en-us@test.txt",
  "value": "default",
}
`;

exports[`get it does not update versionless nodes: versionless unchanged 1`] = `
Object {
  "uri": "i18n://en-us@test.txt",
  "value": "default",
}
`;

exports[`get it handles auto-versioning 1`] = `
Object {
  "uri": "i18n://en-us@test.txt#1",
  "value": "user edited text",
}
`;

exports[`get it handles error status codes 1`] = `
Object {
  "message": "Djedi API error for request: POST /djedi/nodes/
RequestData sent: {
  \\"i18n://en-us@test.txt\\": \\"default\\"
}
Response: 500 <mock.statusText>
Error: Unexpected response status code. Got 500 but expected 200 <= status < 400.",
  "responseText": "<h1>Server error 500</h1>",
  "status": 500,
}
`;

exports[`get it handles invalid JSON 1`] = `
Object {
  "message": "Djedi API error for request: POST /djedi/nodes/
RequestData sent: {
  \\"i18n://en-us@test.txt\\": \\"default\\"
}
Response: 200 <mock.statusText>
SyntaxError: Unexpected end of JSON input",
  "responseText": "{ \\"invalid\\": true",
  "status": 200,
}
`;

exports[`get it handles rejected requests 1`] = `
Object {
  "message": "Djedi API error for request: POST /djedi/nodes/
RequestData sent: {
  \\"i18n://en-us@test.txt\\": \\"default\\"
}
Response: undefined
Error: Network error",
  "responseText": "",
  "status": -1,
}
`;

exports[`get it respects options.baseUrl 1`] = `
Array [
  Array [
    "https://example.com/cms/nodes/",
    Object {
      "body": Object {
        "i18n://en-us@test.txt": "default",
      },
      "headers": Object {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
]
`;

exports[`get it warns about rejected refresh requests: callback1 1`] = `
Array [
  Array [
    Object {
      "uri": "i18n://en-us@test.txt",
      "value": "one",
    },
  ],
]
`;

exports[`get it warns about rejected refresh requests: callback2 1`] = `
Array [
  Array [
    Object {
      "uri": "i18n://en-us@test.txt",
      "value": "one",
    },
  ],
]
`;

exports[`get it warns about rejected refresh requests: callback3 1`] = `
Array [
  Array [
    Object {
      "uri": "i18n://en-us@test.txt",
      "value": "two",
    },
  ],
]
`;

exports[`get it warns about rejected refresh requests: warning 1`] = `
Array [
  Array [
    "djedi-react: Failed to refresh node",
    Object {
      "uri": "i18n://en-us@test.txt",
      "value": undefined,
    },
    [Error: Djedi API error for request: POST /djedi/nodes/
RequestData sent: {
  "i18n://en-us@test.txt": null
}
Response: undefined
Error: Network error],
  ],
]
`;

exports[`getBatched it calls the callback synchronously if the node already exists: simple 1`] = `
Object {
  "uri": "i18n://en-us@test.txt",
  "value": "test",
}
`;

exports[`getBatched it calls the callback synchronously if the node already exists: versioned 1`] = `
Object {
  "uri": "i18n://en-us@edited.txt#1",
  "value": "user edited text",
}
`;

exports[`getBatched it calls the callback synchronously if the node already exists: versionless 1`] = `
Object {
  "uri": "i18n://en-us@edited.txt#1",
  "value": "user edited text",
}
`;

exports[`getBatched it does not update versionless nodes: versioned 1`] = `
Object {
  "uri": "i18n://en-us@test.txt#1",
  "value": "edited",
}
`;

exports[`getBatched it does not update versionless nodes: versionless 1`] = `
Object {
  "uri": "i18n://en-us@test.txt",
  "value": "default",
}
`;

exports[`getBatched it does not update versionless nodes: versionless unchanged 1`] = `
Object {
  "uri": "i18n://en-us@test.txt",
  "value": "default",
}
`;

exports[`getBatched it handles auto-versioning 1`] = `
Object {
  "uri": "i18n://en-us@test.txt#1",
  "value": "user edited text",
}
`;

exports[`getBatched it handles error status codes 1`] = `
Object {
  "message": "Djedi API error for request: POST /djedi/nodes/
RequestData sent: {
  \\"i18n://en-us@test.txt\\": \\"default\\"
}
Response: 500 <mock.statusText>
Error: Unexpected response status code. Got 500 but expected 200 <= status < 400.",
  "responseText": "<h1>Server error 500</h1>",
  "status": 500,
}
`;

exports[`getBatched it handles invalid JSON 1`] = `
Object {
  "message": "Djedi API error for request: POST /djedi/nodes/
RequestData sent: {
  \\"i18n://en-us@test.txt\\": \\"default\\"
}
Response: 200 <mock.statusText>
SyntaxError: Unexpected end of JSON input",
  "responseText": "{ \\"invalid\\": true",
  "status": 200,
}
`;

exports[`getBatched it handles rejected requests 1`] = `
Object {
  "message": "Djedi API error for request: POST /djedi/nodes/
RequestData sent: {
  \\"i18n://en-us@test.txt\\": \\"default\\"
}
Response: undefined
Error: Network error",
  "responseText": "",
  "status": -1,
}
`;

exports[`getBatched it respects options.baseUrl 1`] = `
Array [
  Array [
    "https://example.com/cms/nodes/",
    Object {
      "body": Object {
        "i18n://en-us@test.txt": "default",
      },
      "headers": Object {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
]
`;

exports[`getBatched it warns about rejected refresh requests: callback1 1`] = `
Array [
  Array [
    Object {
      "uri": "i18n://en-us@test.txt",
      "value": "one",
    },
  ],
]
`;

exports[`getBatched it warns about rejected refresh requests: callback2 1`] = `
Array [
  Array [
    Object {
      "uri": "i18n://en-us@test.txt",
      "value": "one",
    },
  ],
]
`;

exports[`getBatched it warns about rejected refresh requests: callback3 1`] = `
Array [
  Array [
    Object {
      "uri": "i18n://en-us@test.txt",
      "value": "two",
    },
  ],
]
`;

exports[`getBatched it warns about rejected refresh requests: warning 1`] = `
Array [
  Array [
    "djedi-react: Failed to refresh node",
    Object {
      "uri": "i18n://en-us@test.txt",
      "value": undefined,
    },
    [Error: Djedi API error for request: POST /djedi/nodes/
RequestData sent: {
  "i18n://en-us@test.txt": null
}
Response: undefined
Error: Network error],
  ],
]
`;

exports[`prefetch it handles error status codes 1`] = `
Object {
  "message": "Djedi API error for request: POST /djedi/nodes/
RequestData sent: {
  \\"i18n://en-us@test.txt\\": null
}
Response: 500 <mock.statusText>
Error: Unexpected response status code. Got 500 but expected 200 <= status < 400.",
  "responseText": "<h1>Server error 500</h1>",
  "status": 500,
}
`;

exports[`prefetch it handles invalid JSON 1`] = `
Object {
  "message": "Djedi API error for request: POST /djedi/nodes/
RequestData sent: {
  \\"i18n://en-us@test.txt\\": null
}
Response: 200 <mock.statusText>
SyntaxError: Unexpected end of JSON input",
  "responseText": "{ \\"invalid\\": true",
  "status": 200,
}
`;

exports[`prefetch it handles rejected requests 1`] = `
Object {
  "message": "Djedi API error for request: POST /djedi/nodes/
RequestData sent: {
  \\"i18n://en-us@test.txt\\": null
}
Response: undefined
Error: Network error",
  "responseText": "",
  "status": -1,
}
`;

exports[`prefetch it respects options.baseUrl 1`] = `
Array [
  Array [
    "https://example.com/cms/nodes/",
    Object {
      "body": Object {
        "i18n://en-us@test.txt": null,
      },
      "headers": Object {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
]
`;
